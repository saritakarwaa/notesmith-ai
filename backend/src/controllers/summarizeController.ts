import { Request, Response } from "express";
import { extractTextFromInput } from "../utils/extractText";
import axios from "axios";

interface FileRequest extends Request {
  file?: Express.Multer.File;
}

export async function summarizeText(req: FileRequest, res: Response) {
  try {
    const text = await extractTextFromInput({
      text: req.body.text,
      fileBuffer: req.file?.buffer,
    });

    const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
    if (!GEMINI_API_KEY) {
      return res.status(500).json({ message: "Missing Google Gemini API Key" });
    }

    const prompt = `Please summarize the following text clearly and concisely:\n\n${text}`;

    const response = await axios.post(
      `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${GEMINI_API_KEY}`,
      {
        contents: [
          {
            role: "user",
            parts: [{ text: prompt }],
          },
        ],
      },
      {
        headers: {
          "Content-Type": "application/json",
        },
      }
    );

    const summary = response.data.candidates?.[0]?.content?.parts?.[0]?.text;

    if (!summary) {
      return res.status(502).json({ message: "No summary generated by model" });
    }
    res.json({ summary:summary.trim() });
  } catch (error) {
    console.error("Summarization error:", error);
    res.status(500).json({ message: "Error summarizing text" });
  }
}
